{"version":3,"file":"component---src-templates-blog-post-js-be00c993f9422d05a351.js","mappings":"iKAuFA,IA5EY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,uBAEtBZ,aAAM,EAANA,EAAQa,OACP,yBACE,8BAASb,EAAOa,MAAc,KAAEb,aAAM,EAANA,EAAQc,UAAW,KACnD,2BACA,sCAAqB,qCACrB,2BACC,+BACD,8BACE,qBAAGC,KAAI,iCAAoCC,IAAI,aAAaC,OAAQ,UAAS,UAI9E,KACD,8BACE,qBAAGF,KAAI,yBAAyBZ,aAAM,EAANA,EAAQe,UAAO,IAAUF,IAAI,aAAaC,OAAQ,UAAS,YAI5F,KACD,8BACE,qBAAGD,IAAI,KAAKD,KAAK,2CAAyC,aAI3D,QACD,8BACE,qBAAGA,KAAI,oEAAuEC,IAAI,aAAaC,OAAQ,UAAS,WAIlH,2BACC,sBACD,8BACE,qBAAGF,KAAI,8DAAiEC,IAAI,aAAaC,OAAQ,UAAS,kBAQtH,C,oFCnBA,UA3DyB,SAAH,GAA4B,IAAD,EAArBnB,EAAI,EAAJA,KAAMqB,EAAQ,EAARA,SAC1BC,EAAOtB,EAAKuB,eACZC,GAAkC,QAAtB,EAAAxB,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBqB,QAAK,QACvCC,EAAmB1B,EAAnB0B,SAAUC,EAAS3B,EAAT2B,KAElB,OACE,gBAAC,IAAM,CAACN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAG,CACFC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACExB,UAAU,YACVyB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBAAIH,EAAKM,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAG,QAGR,uBAAK3B,UAAU,iBACb,sBACEgC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAkB,KAAI,CAACC,GAAInB,EAASoB,OAAOC,KAAM7B,IAAI,QAAM,KACrCQ,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAiB,KAAI,CAACC,GAAIlB,EAAKmB,OAAOC,KAAM7B,IAAI,QAC7BS,EAAKC,YAAYH,MAAK,SAQvC,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/avatar.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          <strong>{author.name}</strong> {author?.summary || null}\n          <br/>\n          <strong>Note</strong>: Hyperlinks below open a new tab.\n          <br/>\n          {\"You can reach out to me via \"}\n          <strong>\n            <a href={`mailto:kprateeknayak@gmail.com`} rel=\"noreferrer\" target={\"_blank\"}>\n              Email\n            </a>\n          </strong>\n          {\", \"}\n          <strong>\n            <a href={`https://twitter.com/${social?.twitter || ``}`} rel=\"noreferrer\" target={\"_blank\"}>\n              Twitter\n            </a>\n          </strong>\n          {\", \"}\n          <strong>\n            <a rel=\"me\" href=\"https://fosstodon.org/@kudure_ranganath\">\n              Mastodon\n            </a>\n          </strong>\n          {\", or \"}\n          <strong>\n            <a href={`https://github.com/outofordercore/outofordercore.github.io/issues`} rel=\"noreferrer\" target={\"_blank\"}>\n              Github\n            </a>\n          </strong>\n          <br/>\n          {\"Avatar stolen from \"}\n          <strong>\n            <a href={`https://knowyourmeme.com/photos/1896667-soy-boy-face-soyjak`} rel=\"noreferrer\" target={\"_blank\"}>\n              KnowYourMeme\n            </a>\n          </strong>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","rel","target","twitter","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}